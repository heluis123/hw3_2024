html{
    scroll-behavior: smooth;
}

body{
  background-color: rgb(115, 115, 115);
  font-size: 18px;
  margin: 0;
  padding: 0;
}

h1{
  background-color: transparent;
  font-size: 50px;
  line-height: 1;
  padding: 50px 0;
  text-align: center;
}

h2{
  font-size: 32px;
  line-height: 1.5;
}

nav li{
  display:inline;
  padding-right:20px;

}

nav a{
  color: black;
  font-weight: bold;
  text-decoration: none;
}

footer{
  background-color: black;
  color: white;
  grid-column: 1 / -1;
  grid-row: 7 / auto;
  padding-top: 30px;
  text-align: center;
}

nav{
  background-color: #ddd;
  padding: 25px 0;
  text-align: left;
  grid-column: 1 / -1;
}

header{
  background-attachment: fixed; /* Parallax effect */
  background-position: center;  /* Parallax effect */
  background-repeat: no-repeat; /* Parallax effect */
  background-size: cover;       /* Parallax effect */
  color: white;
  height: 400px;                /* Parallax effect */
  background: url(../images/header.jpg);
  min-height: 400px;
  grid-column: 1 / -1;
}

header p{
  display: inline-block;
  color: white;
  font-size: 24px;
  padding: 0 100px;
  text-align: center;
}



@media screen and (prefers-reduced-motion: reduce){
  html{
    scroll-behavior: auto;  /* Removes scroll animation */
  }

  .skip a{
    -webkit-transition: none; /* sets to default setting */
    transition: none;        /* sets to default setting */
   }
  }

  /*Turn off parallax*/
  header{
    background-attachment: initial;
  }




  /*Your Code Here*/
  /* PLEASE DO NOT REMOVE MY COMMENTS.  THEY HELP US HELP YOU DEBUG. */

/* Step 1: Write selector/rule property to add an underline when
  links in the navigation are in the hover or focus state.*/
  nav a:hover{
    text-decoration: underline;
    text-decoration-style: wavy;
  }
  
    /* Step 2a: Write selector/rule property to position the default position for the skip class element*/

  .skip a {
    position: absolute; 
    top: -40px;
  }
    /* Step 2b: Write selector/rule property to position the skip class element when it is in focus*/

  .skip a:focus {
    top: 20px; 
  }

    /* Step 3: Write selector/rule property to style all elements when in focus*/

   *:focus {
      outline: 2px solid; 
    }
  
  nav a:focus{
    border-top: 2px black solid;
    text-decoration: none;
  }


  /* Step 4: Write selector/rule property to style the container */
    /* Step 5: Write selector/rule property to add the background image to the 
  first div in the grid  and place it in the grid. */





  /* Steps 6 and 7: Write the selector/rule properties to add place the next elements in the next
   four rows in the grid. */
  
        /*This will be a lot of rules.... but be strategic and combine seletors*/

  .container{
  
    display: grid;
    grid-template-columns: 1fr 5fr 1fr;
    grid-gap: 15px;
  }
  
  .about, .method, .clients, .contact{
    grid-column: 2;
  }
  
  .about-image, .method-image, .clients-image, .contact-image{
    width: 100%;
    grid-column: 1 / -1;
    max-height: 600px;
    overflow: hidden;
    padding: 0;
    border: none;
  }
  
  .about, .about-image{
    grid-row: 3;
  }
  
  .method, .method-image{
    grid-row: 4;
  }
  
  .clients, .clients-image{
    grid-row: 5;
  }
  
  .contact, .contact-image{
    grid-row: 6;
  }
  
     /* Step 8: Write the selector/rule property to style the .text-block class. */
  .text-block{
    max-height: 250px;
    background-color: rgba(255, 255, 255, .8);
    border: 10px solid black;
    padding: 30px;
    position: relative;
    margin: auto;
    max-height: 25vh;
    align-self: center;
    justify-items: center;
    align-items: center;
    overflow:auto;
    text-align: center;
    }


      /* Add your media query here */

    @media all and (min-width: 800px){
    /* Container grid */

      .container{
        grid-template-columns: 50px auto 500px auto 50px;
      }
        /* Nav alignment */

    nav{
      background-color: white;
      text-align: right;
      padding: 35px 0px;
      align-self: center;
      }
        /* Update grid-column for specific classes */

      .about, .clients, .method-image, .contact-image{
        grid-column: 3 / span 2;
      }
        /* .text-block class update */

      .about-image, .clients-image, .method, .contact{
        grid-column: 2 / span 2;
      }
    }  


      
    /* Step 9: Write the selector/rule property to style the nav element */
    nav{
      background-color: white;
      margin-bottom: 0;
    }
  

    /* Step 10: Write the selector/rule property to update the .container class */
  
  
    /* Steps 11 and 12: Update the grid-column property of the grid's children (where-needed)*/
    
  
   /* Step 13:Write the selector/rule property to update the .text-block class */